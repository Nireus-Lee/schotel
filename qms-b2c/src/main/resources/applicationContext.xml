<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/jee
            http://www.springframework.org/schema/jee/spring-jee.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd
            ">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:config.properties</value>
            </list>
        </property>
    </bean>

    <bean id="ctripOpenApiService" class="cn.buk.api.service.CtripOpenApiServiceImpl">
        <property name="cityDao" ref="cityDao" />
        <property name="hotelDao" ref="hotelDao" />
        <property name="intervalCacheChange" value="120" />
        <property name="allianceId" value="${ctrip.alliance.id}" />
        <property name="sid" value="${ctrip.sid}" />
        <property name="secretKey" value="${ctrip.secret.key}" />
    </bean>

    <bean id="hotelService" class="cn.buk.hotel.service.HotelServiceImpl">
        <property name="hotelDao" ref="hotelDao" />
        <property name="cityDao" ref="cityDao" />
    </bean>

    <!-- dao -->
    <bean id="cityDao" class="cn.buk.hotel.dao.CityDaoImpl" />
    <bean id="hotelDao" class="cn.buk.hotel.dao.HotelDaoImpl" />


    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
    <jee:jndi-lookup id="dataSource"
                     jndi-name="/jdbc/hotel"
                     resource-ref="true" />


    <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="database" value="SQL_SERVER" />
        <property name="databasePlatform" value="org.hibernate.dialect.SQLServer2008Dialect" />
        <property name="showSql" value="true" />
    </bean>

    <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
        <property name="persistenceUnitName" value="hotel" />
    </bean>

    <bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="emf" />
        <property name="jpaDialect" ref="jpaDialect" />
    </bean>

    <tx:annotation-driven />

    <!-- task schedule-->
    <bean id="ratePlanTask" class="cn.buk.qms.task.RatePlanTask">
        <property name="ctripOpenApiService" ref="ctripOpenApiService" />
    </bean>

    <bean id="ratePlanJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="ratePlanTask" />
        </property>
        <property name="targetMethod">
            <value>refreshRatePlan</value>
        </property>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="cacheChangeJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="ratePlanTask" />
        </property>
        <property name="targetMethod">
            <value>refreshHotelCacheChange</value>
        </property>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="hotelInfoJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="ratePlanTask" />
        </property>
        <property name="targetMethod">
            <value>refreshHotelInfo</value>
        </property>
        <property name="concurrent" value="false"/>
    </bean>

    <!-- 配置触发器 -->
    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="ratePlanJob" />
        </property>
        <property name="cronExpression">
            <value>${task.cron.expression}</value>
        </property>
    </bean>
    <bean id="cacheChangeTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="cacheChangeJob" />
        </property>
        <property name="cronExpression">
            <value>${cache.change.task.cron.expression}</value>
        </property>
    </bean>
    <bean id="hotelInfoTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="hotelInfoJob" />
        </property>
        <property name="cronExpression">
            <value>${task.hotel.info.cron}</value>
        </property>
    </bean>

    <bean id="startQuartz" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <!-- 添加触发器 -->
        <property name="triggers">
            <list>
                <ref bean="cronTrigger" />
                <ref bean="cacheChangeTrigger" />
                <ref bean="hotelInfoTrigger" />
            </list>
        </property>
    </bean>

</beans>









